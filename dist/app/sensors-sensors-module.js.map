{"version":3,"sources":["./src/app/sensors/sensors.module.ts","./src/app/sensors/sensors-routing.module.ts","./src/app/sensors/sensors.component.ts","./src/app/sensors/sensors.component.html","./src/app/sensors/sensor/sensor.component.ts","./src/app/sensors/sensor/sensor.component.html"],"names":[],"mappings":"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","file":"sensors-sensors-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TuiButtonModule } from \"@taiga-ui/core\";\n\nimport { SensorsRoutingModule } from './sensors-routing.module';\nimport { SensorsComponent } from './sensors.component';\nimport { SensorComponent } from './sensor/sensor.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { SharedModulesModule } from '../shared/shared.modules.module';\n\n\n@NgModule({\n  imports: [\n    SensorsRoutingModule,\n    SharedModule\n  ],\n  declarations: [SensorsComponent, SensorComponent],\n})\nexport class SensorsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { D3SensorComponent } from '../shared/components/d3-sensor/d3-sensor.component';\nimport { TuiSensorComponent } from '../shared/components/tui-sensor/tui-sensor.component';\nimport { SensorComponent } from './sensor/sensor.component';\nimport { SensorsComponent } from './sensors.component';\n\nconst routes: Routes = [\n  { path: '', component: SensorsComponent, pathMatch: 'full' },\n  {\n    path: ':id', component: SensorComponent, children: [\n      { path: 'c3Route',  component: D3SensorComponent },\n      { path: 'tuiRoute',  component: TuiSensorComponent },\n      { path: '', redirectTo: 'tuiRoute', pathMatch: 'full' }\n    ]\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SensorsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SensorsService } from '../services/sensors.service';\n\n@Component({\n  selector: 'app-sensors',\n  templateUrl: './sensors.component.html',\n  styleUrls: ['./sensors.component.scss']\n})\nexport class SensorsComponent {\n\n  constructor(private router: Router, private sensorsSvc: SensorsService) { }\n\n  selectSensor(sensorId: string) {\n    this.sensorsSvc.setSelectedSensor(sensorId);\n    return this.router.navigateByUrl(`/sensors/${sensorId}`);\n  }\n}\n","<app-choose-sensor (sensorIdSelected)=\"selectSensor($event)\"></app-choose-sensor>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\n\nimport { SensorsService } from '../../services/sensors.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-sensor',\n  templateUrl: './sensor.component.html',\n  styleUrls: ['./sensor.component.scss']\n})\nexport class SensorComponent implements OnInit {\n  activeItemIndex = 0;\n  sensorBtnTitle: 'Start getting Data' | 'Stop' = 'Start getting Data';\n  sensorId = '';\n  fullSensorDateRange = [];\n\n  constructor(private router: Router, private activeRoute: ActivatedRoute, private sensorsSvc: SensorsService) { }\n\n  ngOnInit() {\n    this.activeRoute.params.pipe(untilDestroyed(this)).subscribe(params => {\n      this.sensorId = params['id'];\n      console.log(`Sensor selected:  ${this.sensorId}`);\n    });\n  }\n\n\n\n  onTabClick(tabIndex: number) {\n    this.activeItemIndex = tabIndex;\n    const subUrl = (tabIndex == 0) ? 'tuiRoute' : 'c3Route';\n    this.router.navigate([subUrl], { relativeTo: this.activeRoute, queryParams: { sensorID: this.sensorId } });\n  }\n\n}\n","<div class=\"tui-container\">\r\n  <div class=\"tui-row\">\r\n    <div class=\"tui-col_12 \">\r\n      <tui-tabs [(activeItemIndex)]=\"activeItemIndex\">\r\n        <button tuiTab (click)=\"onTabClick(0)\">Tui-bar-chart based Chart</button>\r\n        <button tuiTab (click)=\"onTabClick(1)\">D3 / C3 based Chart</button>\r\n      </tui-tabs>\r\n    </div>\r\n  </div>\r\n  <router-outlet></router-outlet>\r\n</div>"],"sourceRoot":"webpack:///"}